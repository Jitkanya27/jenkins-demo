<project name="MHA-2018-Red-Team" default="increment" basedir=".">

  <target name="increment" description="Increment build number" depends="flags">
    <buildnumber file="${build.number.file}"/>
    <git command="commit">
      <args>
        <arg value="-m"/>
        <arg value="${git.user.name} build++, was ${build.number}"/>
        <arg value="${build.number.file}"/>
      </args>
    </git>
  </target>

  <!-- From https://gist.github.com/davejlong/874521 -->
  <macrodef name="git">
    <attribute name="command" />
    <attribute name="dir" default="" />
    <element name="args" optional="true" />
    <sequential>
      <echo message="git @{command}" />
      <exec executable="git" dir="@{dir}">
        <arg value="@{command}" />
        <args/>
      </exec>
    </sequential>
  </macrodef>

  <property name="tools.dir" value="${basedir}/tools" />

  <path id="project.classpath">
    <pathelement location="${basedir}/jar/hamcrest-core-1.3.jar"/>
    <pathelement location="${basedir}/jar/junit-4.11.jar"/>
    <pathelement location="${basedir}/classes"/>
  </path>

  <target name="flags">
    <property environment="env"/>
    <property name="env.JOB_NAME" value="jenkins-not-running"/>
    <condition property="is.jenkins" value="true">
      <not>
        <equals arg1="${env.JOB_NAME}" arg2="jenkins-not-running"/>
      </not>
    </condition>
    <exec executable="git" outputproperty="git.user.name">
      <arg value="config"/>
      <arg value="--get"/>
      <arg value="user.name"/>
    </exec>
    <exec executable="git" outputproperty="git.user.email">
      <arg value="config"/>
      <arg value="--get"/>
      <arg value="user.email"/>
    </exec>
    <property name="build.number.file" value="build.number.${git.user.name}"/>
  </target>

  <target name="info" depends="flags">
    <echo>java is ${java.version}</echo>
    <echo>user dir is ${user.dir}</echo>
    <git command="branch" />
    <!-- Mile High Agile 2018 demonstration based on
         https://jenkins.io/blog/2018/05/16/pipelines-with-git-tags/ -->
    <tstamp prefix="start" />
    <echo file="info.txt" append="true" message="${line.separator}" />
    <echo file="info.txt" append="true" message="${start.TODAY} ${start.DSTAMP} ${start.TSTAMP}${line.separator}" />
    <echo file="info.txt" append="true" message="BUILD_NUMBER=${env.BUILD_NUMBER}${line.separator}" />
    <echo file="info.txt" append="true" message="BUILD_NUMBER=${env.BUILD_NUMBER}${line.separator}" />
    <echo file="info.txt" append="true" message="BUILD_ID=${env.BUILD_ID}${line.separator}" />
    <echo file="info.txt" append="true" message="JOB_NAME=${env.JOB_NAME}${line.separator}" />
    <echo file="info.txt" append="true" message="BUILD_TAG=${env.BUILD_TAG}${line.separator}" />
    <echo file="info.txt" append="true" message="EXECUTOR_NUMBER=${env.EXECUTOR_NUMBER}${line.separator}" />
    <echo file="info.txt" append="true" message="NODE_NAME=${env.NODE_NAME}${line.separator}" />
    <echo file="info.txt" append="true" message="NODE_LABELS=${env.NODE_LABELS}${line.separator}" />
    <echo file="info.txt" append="true" message="JAVA_HOME=${env.JAVA_HOME}${line.separator}" />
    <echo file="info.txt" append="true" message="WORKSPACE=${env.WORKSPACE}${line.separator}" />
    <echo file="info.txt" append="true" message="HUDSON_URL=${env.HUDSON_URL}${line.separator}" />
    <echo file="info.txt" append="true" message="BUILD_URL=${env.BUILD_URL}${line.separator}" />
    <echo file="info.txt" append="true" message="JOB_URL=${env.JOB_URL}${line.separator}" />
    <echo file="info.txt" append="true" message="SVN_REVISION=${env.SVN_REVISION}${line.separator}" />
    <echo file="info.txt" append="true" message="CVS_BRANCH=${env.CVS_BRANCH}${line.separator}" />
    <echo>os.arch is ${os.arch}</echo>
    <echo>os.name is ${os.name}</echo>
    <echo>os.version is ${os.version}</echo>
  </target>

  <!-- ======================================================= -->
  <!-- Defines the Jalopy task used to format Java source code -->
  <!-- ======================================================= -->
  <taskdef name="jalopy" classname="de.hunsicker.jalopy.plugin.ant.AntPlugin">
    <classpath>
      <fileset dir="${basedir}/tools/jalopy/">
        <include name="**/*.jar"/>
      </fileset>
    </classpath>
  </taskdef>

  <target name="format" depends="info,flags" unless="is.jenkins">
    <jalopy convention="${basedir}/tools/jalopy/sun.xml"
            history="file"
            historymethod="adler32"
            encoding="iso-8859-1">
      <fileset dir="${basedir}" includes="**/*.java"/>
    </jalopy>
  </target>

  <target name="clean">
    <delete dir="classes"/>
    <delete dir="." includes="TEST-*" />
    <delete file="info.txt" />
    <delete file="findbugs.xml" />
  </target>

  <target name="compile" depends="format">
  <!-- <target name="compile"> -->
    <mkdir dir="classes"/>
    <javac classpathref="project.classpath"
           debug="on"
           destdir="classes"
           includeantruntime="false"
           >
      <src path="src" />
      <src path="test" />
    </javac>
  </target>

  <target name="test" depends="compile">
    <junit printsummary="yes"
           fork="yes"
           reloading="false"
           failureProperty="junit.failed">
      <classpath refid="project.classpath"/>
      <formatter type="brief"/>
      <formatter type="xml"/>
      <batchtest>
        <fileset dir="classes">
          <include name="**/*Test*.class"/>
        </fileset>
      </batchtest>
    </junit>
    <fail message="Test failed" if="junit.failed"/>
  </target>

  <target name="run" depends="test">
    <java classname="com.markwaite.MarkWaite" classpathref="project.classpath" />
  </target>

</project>
